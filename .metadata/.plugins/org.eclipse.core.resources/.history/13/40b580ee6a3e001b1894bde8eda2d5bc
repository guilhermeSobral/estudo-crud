package com.crudcompleto.controllers;

import java.math.BigDecimal;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.crudcompleto.entities.Produto;
import com.crudcompleto.service.ProdutoService;

@RestController
@RequestMapping("/produtos")
public class ProdutoController {
	
	@Autowired
	private ProdutoService service;
	
	@PostMapping
	@ResponseStatus(code = HttpStatus.CREATED)
	public void save(@RequestBody Produto produto) {
		service.save(produto);
	}
	
	@GetMapping
	public ResponseEntity<List<Produto>> findAll() {
		var list = service.findAll();
		return ResponseEntity.ok().body(list);
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<Produto> findById(@PathVariable Long id) {
		var produto = service.findById(id);
		return ResponseEntity.ok().body(produto);
	}	
	
	@GetMapping("/filter/name/{name}")
	public ResponseEntity<List<Produto>> findByName(@PathVariable String name) {
		var list = service.filterByName(name);
		return ResponseEntity.ok().body(list);
	}
	
	@GetMapping("/filter/price/{price}/operation/{operation}") 
	public ResponseEntity<List<Produto>> findByPrice(@PathVariable BigDecimal price, @PathVariable String operation) {
		var list = service.filterByPrice(operation, price);
		return ResponseEntity.ok().body(list);
	}	
	
	@PutMapping("/{id}")
	public ResponseEntity<Void> update(@PathVariable Long id, @RequestBody Produto update) {
		service.updateProduto(id, update);
		return ResponseEntity.noContent().build();
	}
	
	@DeleteMapping("/{id}")
	public ResponseEntity<Void> delete(@PathVariable Long id) {
		service.deleteProduto(id);
		return ResponseEntity.noContent().build();
	}
}
